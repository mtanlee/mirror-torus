// generated by stringer -output=string.go -type=Command,ConfigCommand,DirectiveCommand,Error,MACMaskCommand,MACMaskError,ReserveReleaseCommand; DO NOT EDIT

package aoe

import "fmt"

const _Command_name = "CommandIssueATACommandCommandQueryConfigInformationCommandMACMaskListCommandReserveRelease"

var _Command_index = [...]uint8{0, 22, 51, 69, 90}

func (i Command) String() string {
	if i >= Command(len(_Command_index)-1) {
		return fmt.Sprintf("Command(%d)", i)
	}
	return _Command_name[_Command_index[i]:_Command_index[i+1]]
}

const _ConfigCommand_name = "ConfigCommandReadConfigCommandTestConfigCommandTestPrefixConfigCommandSetConfigCommandForceSet"

var _ConfigCommand_index = [...]uint8{0, 17, 34, 57, 73, 94}

func (i ConfigCommand) String() string {
	if i >= ConfigCommand(len(_ConfigCommand_index)-1) {
		return fmt.Sprintf("ConfigCommand(%d)", i)
	}
	return _ConfigCommand_name[_ConfigCommand_index[i]:_ConfigCommand_index[i+1]]
}

const _DirectiveCommand_name = "DirectiveCommandNoneDirectiveCommandAddDirectiveCommandDelete"

var _DirectiveCommand_index = [...]uint8{0, 20, 39, 61}

func (i DirectiveCommand) String() string {
	if i >= DirectiveCommand(len(_DirectiveCommand_index)-1) {
		return fmt.Sprintf("DirectiveCommand(%d)", i)
	}
	return _DirectiveCommand_name[_DirectiveCommand_index[i]:_DirectiveCommand_index[i+1]]
}

const _Error_name = "ErrorUnrecognizedCommandCodeErrorBadArgumentParameterErrorDeviceUnavailableErrorConfigStringPresentErrorUnsupportedVersionErrorTargetIsReserved"

var _Error_index = [...]uint8{0, 28, 53, 75, 99, 122, 143}

func (i Error) String() string {
	i -= 1
	if i >= Error(len(_Error_index)-1) {
		return fmt.Sprintf("Error(%d)", i+1)
	}
	return _Error_name[_Error_index[i]:_Error_index[i+1]]
}

const _MACMaskCommand_name = "MACMaskCommandReadMACMaskCommandEdit"

var _MACMaskCommand_index = [...]uint8{0, 18, 36}

func (i MACMaskCommand) String() string {
	if i >= MACMaskCommand(len(_MACMaskCommand_index)-1) {
		return fmt.Sprintf("MACMaskCommand(%d)", i)
	}
	return _MACMaskCommand_name[_MACMaskCommand_index[i]:_MACMaskCommand_index[i+1]]
}

const _MACMaskError_name = "MACMaskErrorUnspecifiedMACMaskErrorBadCommandMACMaskErrorListFull"

var _MACMaskError_index = [...]uint8{0, 23, 45, 65}

func (i MACMaskError) String() string {
	i -= 1
	if i >= MACMaskError(len(_MACMaskError_index)-1) {
		return fmt.Sprintf("MACMaskError(%d)", i+1)
	}
	return _MACMaskError_name[_MACMaskError_index[i]:_MACMaskError_index[i+1]]
}

const _ReserveReleaseCommand_name = "ReserveReleaseCommandReadReserveReleaseCommandSetReserveReleaseCommandForceSet"

var _ReserveReleaseCommand_index = [...]uint8{0, 25, 49, 78}

func (i ReserveReleaseCommand) String() string {
	if i >= ReserveReleaseCommand(len(_ReserveReleaseCommand_index)-1) {
		return fmt.Sprintf("ReserveReleaseCommand(%d)", i)
	}
	return _ReserveReleaseCommand_name[_ReserveReleaseCommand_index[i]:_ReserveReleaseCommand_index[i+1]]
}
